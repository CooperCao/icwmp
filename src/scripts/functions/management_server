#!/bin/sh
# Copyright (C) 2011-2012 Luka Perkov <freecwmp@lukaperkov.net>

get_management_server_url() {
local tmp=${FLAGS_value}
FLAGS_value=${FLAGS_TRUE}
local scheme=`get_management_server_x_freecwmp_org__acs_scheme`
local hostname=`get_management_server_x_freecwmp_org__acs_hostname`
local port=`get_management_server_x_freecwmp_org__acs_port`
local path=`get_management_server_x_freecwmp_org__acs_path`
FLAGS_value=$tmp
#local val=""
local parm="InternetGatewayDevice.ManagementServer.URL"
case "$action" in
	get_value)
	val=`echo $scheme://$hostname:$port$path`
	;;
	get_name)
	val="0"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
ubus_freecwmp_output "$parm" "$val"
}

set_management_server_url() {
local parm="InternetGatewayDevice.ManagementServer.URL"
case "$action" in
	set_value)
	local url=$1
	local scheme
	local hostname
	local path
	local port

	scheme=`echo $url | awk -F "://" '{ print $1 }'`
	hostname=`echo $url | awk -F "$scheme://" '{ print $2 }' | awk -F ":" '{ print $1 }' | awk -F "/" '{ print $1 }'`
	port=`echo $url | awk -F "$scheme://$hostname:" '{ print $2 }' | awk -F '/' '{ print $1 }'`

	if [ -z "$port" ]; then
		port=80
		path=`echo $url | awk -F "$scheme://$hostname" '{ print $2 }'`
		echo 123 $path
	else
		path=`echo $url | awk -F "$scheme://$hostname:$port" '{ print $2 }'`
	fi

	if [ -z "$path" ]; then
		path="/"
	fi

	set_management_server_x_freecwmp_org__acs_scheme $scheme
	set_management_server_x_freecwmp_org__acs_hostname $hostname
	set_management_server_x_freecwmp_org__acs_port $port
	set_management_server_x_freecwmp_org__acs_path $path

	ubus ${UBUS_SOCKET:+-s $UBUS_SOCKET} call tr069 inform '{ "event": "value_change" }' &
	;;
	set_notification)
	local val=$1
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_username() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.Username"
case "$action" in
	get_value)
	val=`/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} get freecwmp.@acs[0].username 2> /dev/null`
	;;
	get_name)
	val="0"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
ubus_freecwmp_output "$parm" "$val"
}

set_management_server_username() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.Username"
case "$action" in
	set_value)
	/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@acs[0].username="$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_password() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.Password"
case "$action" in
	get_value)
	val=`/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} get freecwmp.@acs[0].password 2> /dev/null`
	;;
	get_name)
	val="0"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
ubus_freecwmp_output "$parm" "$val"
}

set_management_server_password() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.Password"
case "$action" in
	set_value)
	/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@acs[0].password="$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_periodic_inform_enable() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.PeriodicInformEnable"
case "$action" in
	get_value)
freecwmp_get_parameter_value "val" "$parm"
	;;
	get_name)
	val="1"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
ubus_freecwmp_output "$parm" "$val"
}

set_management_server_periodic_inform_enable() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.PeriodicInformEnable"
case "$action" in
	set_value)
	freecwmp_set_parameter_value "$parm" "$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_periodic_inform_interval() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.PeriodicInformInterval"
case "$action" in
	get_value)
freecwmp_get_parameter_value "val" "$parm"
	;;
	get_name)
	val="1"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
ubus_freecwmp_output "$parm" "$val"
}

set_management_server_periodic_inform_interval() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.PeriodicInformInterval"
case "$action" in
	set_value)
	freecwmp_set_parameter_value "$parm" "$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_connection_request_url() {
local val
local parm="InternetGatewayDevice.ManagementServer.ConnectionRequestURL"
case "$action" in
	get_value)
	if [ -z "$default_management_server_connection_request_url" ]; then
		local tmp=${FLAGS_value}
		FLAGS_value=${FLAGS_TRUE}
		local ip=`get_wan_device_mng_interface_ip`
		local port=`get_management_server_x_freecwmp_org__connection_request_port`
		FLAGS_value=$tmp

		if [ -n "$ip" -a -n "$port" ]; then
			val="http://$ip:$port/"
		fi
	else
		val=$default_management_server_connection_request_url
	fi
	;;
	get_name)
	val="0"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
ubus_freecwmp_output "$parm" "$val"
}

get_management_server_connection_request_username() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.ConnectionRequestUsername"
case "$action" in
	get_value)
	val=`/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} get freecwmp.@local[0].username 2> /dev/null`
	;;
	get_name)
	val="0"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
ubus_freecwmp_output "$parm" "$val"
}

set_management_server_connection_request_username() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.ConnectionRequestUsername"
case "$action" in
	set_value)
	/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@local[0].username="$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_connection_request_password() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.ConnectionRequestPassword"
case "$action" in
	get_value)
	val=`/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} get freecwmp.@local[0].password 2> /dev/null`
	;;
	get_name)
	val="0"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
ubus_freecwmp_output "$parm" "$val"
}

set_management_server_connection_request_password() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.ConnectionRequestPassword"
case "$action" in
	set_value)
	/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@local[0].password="$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

# TODO: InternetGatewayDevice.ManagementServer.PeriodicInformTime

get_management_server_x_freecwmp_org__acs_scheme() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Scheme"
case "$action" in
	get_value)
	val=`/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} get freecwmp.@acs[0].scheme 2> /dev/null`
	;;
	get_name)
	val="1"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
if [ "$FLAGS_value" != "${FLAGS_TRUE}" ]; then
	ubus_freecwmp_output "$parm" "$val"
else
	freecwmp_output "$parm" "$val"
fi
}

set_management_server_x_freecwmp_org__acs_scheme() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Scheme"
case "$action" in
	set_value)
	/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@acs[0].scheme="$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_x_freecwmp_org__acs_hostname() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Hostname"
case "$action" in
	get_value)
	val=`/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} get freecwmp.@acs[0].hostname 2> /dev/null`
	;;
	get_name)
	val="1"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
if [ "$FLAGS_value" != "${FLAGS_TRUE}" ]; then
	ubus_freecwmp_output "$parm" "$val"
else
	freecwmp_output "$parm" "$val"
fi
}

set_management_server_x_freecwmp_org__acs_hostname() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Hostname"
case "$action" in
	set_value)
	if [ -z "$default_management_server_acs_hostname" ]; then
		/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@acs[0].hostname="$val"
	else
		/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@acs[0].hostname="$default_management_server_acs_hostname"
	fi
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_x_freecwmp_org__acs_port() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Port"
case "$action" in
	get_value)
	val=`/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} get freecwmp.@acs[0].port 2> /dev/null`
	;;
	get_name)
	val="1"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
if [ "$FLAGS_value" != "${FLAGS_TRUE}" ]; then
	ubus_freecwmp_output "$parm" "$val"
else
	freecwmp_output "$parm" "$val"
fi
}

set_management_server_x_freecwmp_org__acs_port() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Port"
case "$action" in
	set_value)
	/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@acs[0].port="$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_x_freecwmp_org__acs_path() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Path"
case "$action" in
	get_value)
	val=`/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} get freecwmp.@acs[0].path 2> /dev/null`
	;;
	get_name)
	val="1"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
if [ "$FLAGS_value" != "${FLAGS_TRUE}" ]; then
	ubus_freecwmp_output "$parm" "$val"
else
	freecwmp_output "$parm" "$val"
fi
}

set_management_server_x_freecwmp_org__acs_path() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Path"
case "$action" in
	set_value)
	/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@acs[0].path="$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server_x_freecwmp_org__connection_request_port() {
local val=""
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__Connection_Request_Port"
case "$action" in
	get_value)
	val=`/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} get freecwmp.@local[0].port 2> /dev/null`
	;;
	get_name)
	val="1"
	;;
	get_notification)
	freecwmp_get_parameter_notification "val" "$parm"
	;;
esac
if [ "$FLAGS_value" != "${FLAGS_TRUE}" ]; then
	ubus_freecwmp_output "$parm" "$val"
else
	freecwmp_output "$parm" "$val"
fi
}

set_management_server_x_freecwmp_org__connection_request_port() {
local val=$1
local parm="InternetGatewayDevice.ManagementServer.X_freecwmp_org__Connection_Request_Port"
case "$action" in
	set_value)
	/sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} set freecwmp.@local[0].port="$val"
	;;
	set_notification)
	freecwmp_set_parameter_notification "$parm" "$val"
	;;
esac
}

get_management_server() {
case "$1" in
	InternetGatewayDevice.)
	get_management_server_url
	get_management_server_username
	get_management_server_password
	get_management_server_periodic_inform_enable
	get_management_server_periodic_inform_interval
	get_management_server_connection_request_url
	get_management_server_connection_request_username
	get_management_server_connection_request_password
	get_management_server_x_freecwmp_org__acs_scheme
	get_management_server_x_freecwmp_org__acs_hostname
	get_management_server_x_freecwmp_org__acs_port
	get_management_server_x_freecwmp_org__acs_path
	get_management_server_x_freecwmp_org__connection_request_port
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.)
	get_management_server_url
	get_management_server_username
	get_management_server_password
	get_management_server_periodic_inform_enable
	get_management_server_periodic_inform_interval
	get_management_server_connection_request_url
	get_management_server_connection_request_username
	get_management_server_connection_request_password
	get_management_server_x_freecwmp_org__acs_scheme
	get_management_server_x_freecwmp_org__acs_hostname
	get_management_server_x_freecwmp_org__acs_port
	get_management_server_x_freecwmp_org__acs_path
	get_management_server_x_freecwmp_org__connection_request_port
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.URL)
	get_management_server_url
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Username)
	get_management_server_username
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Password)
	get_management_server_password
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformEnable)
	get_management_server_periodic_inform_enable
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformInterval)
	get_management_server_periodic_inform_interval
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestURL)
	get_management_server_connection_request_url
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestUsername)
	get_management_server_connection_request_username
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestPassword)
	get_management_server_connection_request_password
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Scheme)
	get_management_server_x_freecwmp_org__acs_scheme
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Hostname)
	get_management_server_x_freecwmp_org__acs_hostname
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Port)
	get_management_server_x_freecwmp_org__acs_port
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Path)
	get_management_server_x_freecwmp_org__acs_path
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__Connection_Request_Port)
	get_management_server_x_freecwmp_org__connection_request_port
	return $FAULT_CPE_NO_FAULT
	;;
esac
return $FAULT_CPE_INVALID_PARAMETER_NAME
}

get_management_server_name() {
case "$1" in
	InternetGatewayDevice.)
	ubus_freecwmp_output "InternetGatewayDevice.ManagementServer." "0"
	if [ "$2" = "0" ]; then
		get_management_server_url
		get_management_server_username
		get_management_server_password
		get_management_server_periodic_inform_enable
		get_management_server_periodic_inform_interval
		get_management_server_connection_request_url
		get_management_server_connection_request_username
		get_management_server_connection_request_password
		get_management_server_x_freecwmp_org__acs_scheme
		get_management_server_x_freecwmp_org__acs_hostname
		get_management_server_x_freecwmp_org__acs_port
		get_management_server_x_freecwmp_org__acs_path
		get_management_server_x_freecwmp_org__connection_request_port
	fi
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.)
	ubus_freecwmp_output "InternetGatewayDevice.ManagementServer." "0"
	get_management_server_url
	get_management_server_username
	get_management_server_password
	get_management_server_periodic_inform_enable
	get_management_server_periodic_inform_interval
	get_management_server_connection_request_url
	get_management_server_connection_request_username
	get_management_server_connection_request_password
	get_management_server_x_freecwmp_org__acs_scheme
	get_management_server_x_freecwmp_org__acs_hostname
	get_management_server_x_freecwmp_org__acs_port
	get_management_server_x_freecwmp_org__acs_path
	get_management_server_x_freecwmp_org__connection_request_port
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.URL)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_url
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Username)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_username
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Password)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_password
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformEnable)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_periodic_inform_enable
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformInterval)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_periodic_inform_interval
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestURL)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_connection_request_url
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestUsername)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_connection_request_username
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestPassword)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_connection_request_password
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Scheme)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_x_freecwmp_org__acs_scheme
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Hostname)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_x_freecwmp_org__acs_hostname
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Port)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_x_freecwmp_org__acs_port
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Path)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_x_freecwmp_org__acs_path
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__Connection_Request_Port)
	if [ "$2" = "1" ]; then
		return $FAULT_CPE_INVALID_ARGUMENTS
	fi
	get_management_server_x_freecwmp_org__connection_request_port
	return $FAULT_CPE_NO_FAULT
	;;
esac
return $FAULT_CPE_INVALID_PARAMETER_NAME
}

get_management_server_notification() {
case "$1" in
	InternetGatewayDevice.)
	get_management_server_url
	get_management_server_username
	get_management_server_password
	get_management_server_periodic_inform_enable
	get_management_server_periodic_inform_interval
	get_management_server_connection_request_url
	get_management_server_connection_request_username
	get_management_server_connection_request_password
	get_management_server_x_freecwmp_org__acs_scheme
	get_management_server_x_freecwmp_org__acs_hostname
	get_management_server_x_freecwmp_org__acs_port
	get_management_server_x_freecwmp_org__acs_path
	get_management_server_x_freecwmp_org__connection_request_port
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.)
	get_management_server_url
	get_management_server_username
	get_management_server_password
	get_management_server_periodic_inform_enable
	get_management_server_periodic_inform_interval
	get_management_server_connection_request_url
	get_management_server_connection_request_username
	get_management_server_connection_request_password
	get_management_server_x_freecwmp_org__acs_scheme
	get_management_server_x_freecwmp_org__acs_hostname
	get_management_server_x_freecwmp_org__acs_port
	get_management_server_x_freecwmp_org__acs_path
	get_management_server_x_freecwmp_org__connection_request_port
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.URL)
	get_management_server_url
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Username)
	get_management_server_username
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Password)
	get_management_server_password
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformEnable)
	get_management_server_periodic_inform_enable
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformInterval)
	get_management_server_periodic_inform_interval
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestURL)
	get_management_server_connection_request_url
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestUsername)
	get_management_server_connection_request_username
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestPassword)
	get_management_server_connection_request_password
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Scheme)
	get_management_server_x_freecwmp_org__acs_scheme
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Hostname)
	get_management_server_x_freecwmp_org__acs_hostname
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Port)
	get_management_server_x_freecwmp_org__acs_port
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Path)
	get_management_server_x_freecwmp_org__acs_path
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__Connection_Request_Port)
	get_management_server_x_freecwmp_org__connection_request_port
	return $FAULT_CPE_NO_FAULT
	;;
esac
return $FAULT_CPE_INVALID_PARAMETER_NAME
}

set_management_server() {
case "$1" in
	InternetGatewayDevice.ManagementServer.URL)
	set_management_server_url "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Username)
	set_management_server_username "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Password)
	set_management_server_password "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformEnable)
	set_management_server_periodic_inform_enable "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformInterval)
	set_management_server_periodic_inform_interval "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestURL)
	set_management_server_connection_request_url "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestUsername)
	set_management_server_connection_request_username "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestPassword)
	set_management_server_connection_request_password "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Scheme)
	set_management_server_x_freecwmp_org__acs_scheme "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Hostname)
	set_management_server_x_freecwmp_org__acs_hostname "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Port)
	set_management_server_x_freecwmp_org__acs_port "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Path)
	set_management_server_x_freecwmp_org__acs_path "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__Connection_Request_Port)
	set_management_server_x_freecwmp_org__connection_request_port "$2"
	return $FAULT_CPE_NO_FAULT
	;;
esac
# /sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} commit
return $FAULT_CPE_INVALID_PARAMETER_NAME
}

set_management_server_notification() {
case "$1" in
	InternetGatewayDevice.ManagementServer.URL)
	set_management_server_url "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Username)
	set_management_server_username "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.Password)
	set_management_server_password "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformEnable)
	set_management_server_periodic_inform_enable "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.PeriodicInformInterval)
	set_management_server_periodic_inform_interval "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestURL)
	set_management_server_connection_request_url "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestUsername)
	set_management_server_connection_request_username "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.ConnectionRequestPassword)
	set_management_server_connection_request_password "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Scheme)
	set_management_server_x_freecwmp_org__acs_scheme "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Hostname)
	set_management_server_x_freecwmp_org__acs_hostname "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Port)
	set_management_server_x_freecwmp_org__acs_port "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__ACS_Path)
	set_management_server_x_freecwmp_org__acs_path "$2"
	return $FAULT_CPE_NO_FAULT
	;;
	InternetGatewayDevice.ManagementServer.X_freecwmp_org__Connection_Request_Port)
	set_management_server_x_freecwmp_org__connection_request_port "$2"
	return $FAULT_CPE_NO_FAULT
	;;
esac
# /sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} commit
return $FAULT_CPE_INVALID_PARAMETER_NAME
}

check_parameter_management_server_generic() {
case "$1" in
	InternetGatewayDevice.ManagementServer.UpgradesManaged)
	return 0
	;;
esac
return 1
}

get_management_server_generic() {
	check_parameter_management_server_generic "$1" ; _tmp=$? ; if [ "$_tmp" -eq 1 ]; then return $FAULT_CPE_INVALID_PARAMETER_NAME; fi

	freecwmp_get_parameter_value "val" "$1"
	ubus_freecwmp_output "$1" "$val"
	return $FAULT_CPE_NO_FAULT
}

get_management_server_generic_name() {
	check_parameter_management_server_generic "$1" ; _tmp=$? ; if [ "$_tmp" -eq 1 ]; then return $FAULT_CPE_INVALID_PARAMETER_NAME; fi

	local val="1"
	ubus_freecwmp_output "$1" "$val"
	return $FAULT_CPE_NO_FAULT
}

get_management_server_generic_notification() {
	check_parameter_management_server_generic "$1" ; _tmp=$? ; if [ "$_tmp" -eq 1 ]; then return $FAULT_CPE_INVALID_PARAMETER_NAME; fi
	
	local val
	freecwmp_get_parameter_notification "val" "$1"
	ubus_freecwmp_output "$1" "$val"
	return $FAULT_CPE_NO_FAULT
}

set_management_server_generic() {
	check_parameter_management_server_generic "$1" ; _tmp=$? ; if [ "$_tmp" -eq 1 ]; then return $FAULT_CPE_INVALID_PARAMETER_NAME; fi

	freecwmp_set_parameter_value "$1" "$2"
	# /sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} commit
	return $FAULT_CPE_NO_FAULT
}

set_management_server_generic_notification() {
	check_parameter_management_server_generic "$1" ; _tmp=$? ; if [ "$_tmp" -eq 1 ]; then return $FAULT_CPE_INVALID_PARAMETER_NAME; fi

	freecwmp_set_parameter_notification "$1" "$2"
	# /sbin/uci ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} commit
	return $FAULT_CPE_NO_FAULT
}
